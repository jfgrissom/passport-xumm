import { Entity, PrimaryColumn, Column, OneToOne, JoinColumn } from 'typeorm'
import { Session } from './session'
// import { Token } from './token'

@Entity('User')
export class User {
  @PrimaryColumn() // This is a UUID generated by the app not an integer generated by the DB.
  id!: string

  @Column({ nullable: true }) // User Handle / Nick Name (IE: Neo - Not Thomas A. Anderson)
  name?: string

  @Column({ type: 'time', default: () => new Date().getTime() })
  createdAt: number

  @Column({ type: 'time', default: () => new Date().getTime() })
  updatedAt: number

  /*
  @OneToMany((type) => Token, (Token) => Token.id)
  @JoinColumn({ name: 'id' })
  tokens: Token[]
  */

  // User is only bound to 1 session at a time.
  // When the session is updated this must also be updated.
  /*
  @OneToOne((type) => Session, (Session) => Session.id)
  @JoinColumn({ name: 'id' })
  session: Session
  */
}
